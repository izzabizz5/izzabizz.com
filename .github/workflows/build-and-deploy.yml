name: Build and Deploy

on:
  push:
    branches: [ "main" , "staging" ]

jobs:
  build-site:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Generate API Tag Names
      run: |
        echo "${{ steps.extract_branch.outputs.branch }}"
        if [ ${{ steps.extract_branch.outputs.branch }} = "main" ]; then
          echo "TAG_LATEST=website:latest" >> $GITHUB_ENV
          echo "TAG_COMMIT=website:$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        elif [ ${{ steps.extract_branch.outputs.branch }} = "staging" ]; then
          echo "TAG_LATEST=website-stage:latest" >> $GITHUB_ENV
          echo "TAG_COMMIT=website-stage:$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        else
          exit 0
        fi

    - name: Build and push site
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        file: .docker/Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/${{ env.TAG_LATEST }}
          ghcr.io/${{ github.repository_owner }}/${{ env.TAG_COMMIT }}
        cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ env.TAG_LATEST }}
        cache-to: type=inline
